name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PUBLIC_REGISTRY_HOST: docker.io
  PUBLIC_REGISTRY_OWNER: ivan224
  PUBLIC_REGISTRY_APP_NAME: module-39

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: golang:1.15
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
      - name: Build the app
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./${{ env.PUBLIC_REGISTRY_APP_NAME }} ./

  test:
    runs-on: ubuntu-latest
    container:
      image: golang:1.15
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
      - name: Run tests
        run: go test ./...

  lint:
    runs-on: ubuntu-latest
    container:
      image: golang:1.15
    continue-on-error: true
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.41.1
      - name: Run golangci-lint
        run: |
          golangci-lint --version
          golangci-lint run

  build_image_stable:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    container:
      image: docker:latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Docker login
        run: |
          echo ${{ secrets.PUBLIC_REGISTRY_PASSWORD }} | docker login -u "${{ env.PUBLIC_REGISTRY_OWNER }}" --password-stdin ${{ env.PUBLIC_REGISTRY_HOST }}

      - name: Build Docker image (Stable)
        run: |
          docker build -t ${{ env.PUBLIC_REGISTRY_HOST }}/${{ env.PUBLIC_REGISTRY_OWNER }}/${{ env.PUBLIC_REGISTRY_APP_NAME }}:stable .

      - name: Push Docker image (Stable)
        run: |
          docker push ${{ env.PUBLIC_REGISTRY_HOST }}/${{ env.PUBLIC_REGISTRY_OWNER }}/${{ env.PUBLIC_REGISTRY_APP_NAME }}:stable

  build_image_latest:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    container:
      image: docker:latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Docker login
        run: |
          echo ${{ secrets.PUBLIC_REGISTRY_PASSWORD }} | docker login -u "${{ env.PUBLIC_REGISTRY_OWNER }}" --password-stdin ${{ env.PUBLIC_REGISTRY_HOST }}

      - name: Build Docker image (Latest)
        run: |
          docker build -t ${{ env.PUBLIC_REGISTRY_HOST }}/${{ env.PUBLIC_REGISTRY_OWNER }}/${{ env.PUBLIC_REGISTRY_APP_NAME }}:latest .

      - name: Push Docker image (Latest)
        run: |
          docker push ${{ env.PUBLIC_REGISTRY_HOST }}/${{ env.PUBLIC_REGISTRY_OWNER }}/${{ env.PUBLIC_REGISTRY_APP_NAME }}:latest